# 1 "/root/Bela/projects/bela-game/render.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/root/Bela/projects/bela-game/render.cpp"
# 1 "./include/Bela.h" 1
# 48 "./include/Bela.h"
extern "C"
{


# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 25 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 364 "/usr/include/features.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/sys/cdefs.h" 1 3 4
# 415 "/usr/include/arm-linux-gnueabihf/sys/cdefs.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wordsize.h" 1 3 4
# 416 "/usr/include/arm-linux-gnueabihf/sys/cdefs.h" 2 3 4
# 365 "/usr/include/features.h" 2 3 4
# 388 "/usr/include/features.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/gnu/stubs.h" 1 3 4
# 10 "/usr/include/arm-linux-gnueabihf/gnu/stubs.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/gnu/stubs-hard.h" 1 3 4
# 11 "/usr/include/arm-linux-gnueabihf/gnu/stubs.h" 2 3 4
# 389 "/usr/include/features.h" 2 3 4
# 26 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wchar.h" 1 3 4
# 27 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wordsize.h" 1 3 4
# 28 "/usr/include/stdint.h" 2 3 4
# 36 "/usr/include/stdint.h" 3 4

# 36 "/usr/include/stdint.h" 3 4
typedef signed char int8_t;
typedef short int int16_t;
typedef int int32_t;



__extension__
typedef long long int int64_t;




typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 125 "/usr/include/stdint.h" 3 4
typedef int intptr_t;


typedef unsigned int uintptr_t;
# 137 "/usr/include/stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 10 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stdint.h" 2 3 4
# 53 "./include/Bela.h" 2
# 1 "/usr/xenomai/include/cobalt/unistd.h" 1
# 18 "/usr/xenomai/include/cobalt/unistd.h"
       
# 19 "/usr/xenomai/include/cobalt/unistd.h" 3
# 1 "/usr/include/unistd.h" 1 3 4
# 27 "/usr/include/unistd.h" 3 4
extern "C" {
# 205 "/usr/include/unistd.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/posix_opt.h" 1 3 4
# 206 "/usr/include/unistd.h" 2 3 4



# 1 "/usr/include/arm-linux-gnueabihf/bits/environments.h" 1 3 4
# 22 "/usr/include/arm-linux-gnueabihf/bits/environments.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wordsize.h" 1 3 4
# 23 "/usr/include/arm-linux-gnueabihf/bits/environments.h" 2 3 4
# 210 "/usr/include/unistd.h" 2 3 4
# 220 "/usr/include/unistd.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/types.h" 1 3 4
# 27 "/usr/include/arm-linux-gnueabihf/bits/types.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wordsize.h" 1 3 4
# 28 "/usr/include/arm-linux-gnueabihf/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 121 "/usr/include/arm-linux-gnueabihf/bits/types.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/typesizes.h" 1 3 4
# 122 "/usr/include/arm-linux-gnueabihf/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 221 "/usr/include/unistd.h" 2 3 4


typedef __ssize_t ssize_t;





# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 3 4
typedef unsigned int size_t;
# 230 "/usr/include/unistd.h" 2 3 4





typedef __gid_t gid_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __useconds_t useconds_t;




typedef __pid_t pid_t;
# 277 "/usr/include/unistd.h" 3 4
typedef __socklen_t socklen_t;
# 290 "/usr/include/unistd.h" 3 4
extern int access (const char *__name, int __type) throw () __attribute__ ((__nonnull__ (1)));




extern int euidaccess (const char *__name, int __type)
     throw () __attribute__ ((__nonnull__ (1)));


extern int eaccess (const char *__name, int __type)
     throw () __attribute__ ((__nonnull__ (1)));






extern int faccessat (int __fd, const char *__file, int __type, int __flag)
     throw () __attribute__ ((__nonnull__ (2))) ;
# 337 "/usr/include/unistd.h" 3 4
extern __off_t lseek (int __fd, __off_t __offset, int __whence) throw ();
# 348 "/usr/include/unistd.h" 3 4
extern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence)
     throw ();






extern int close (int __fd);






extern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;





extern ssize_t write (int __fd, const void *__buf, size_t __n) ;
# 379 "/usr/include/unistd.h" 3 4
extern ssize_t pread (int __fd, void *__buf, size_t __nbytes,
        __off_t __offset) ;






extern ssize_t pwrite (int __fd, const void *__buf, size_t __n,
         __off_t __offset) ;
# 407 "/usr/include/unistd.h" 3 4
extern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,
   __off64_t __offset) ;


extern ssize_t pwrite64 (int __fd, const void *__buf, size_t __n,
    __off64_t __offset) ;







extern int pipe (int __pipedes[2]) throw () ;




extern int pipe2 (int __pipedes[2], int __flags) throw () ;
# 435 "/usr/include/unistd.h" 3 4
extern unsigned int alarm (unsigned int __seconds) throw ();
# 447 "/usr/include/unistd.h" 3 4
extern unsigned int sleep (unsigned int __seconds);







extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)
     throw ();






extern int usleep (__useconds_t __useconds);
# 472 "/usr/include/unistd.h" 3 4
extern int pause (void);



extern int chown (const char *__file, __uid_t __owner, __gid_t __group)
     throw () __attribute__ ((__nonnull__ (1))) ;



extern int fchown (int __fd, __uid_t __owner, __gid_t __group) throw () ;




extern int lchown (const char *__file, __uid_t __owner, __gid_t __group)
     throw () __attribute__ ((__nonnull__ (1))) ;






extern int fchownat (int __fd, const char *__file, __uid_t __owner,
       __gid_t __group, int __flag)
     throw () __attribute__ ((__nonnull__ (2))) ;



extern int chdir (const char *__path) throw () __attribute__ ((__nonnull__ (1))) ;



extern int fchdir (int __fd) throw () ;
# 514 "/usr/include/unistd.h" 3 4
extern char *getcwd (char *__buf, size_t __size) throw () ;





extern char *get_current_dir_name (void) throw ();







extern char *getwd (char *__buf)
     throw () __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;




extern int dup (int __fd) throw () ;


extern int dup2 (int __fd, int __fd2) throw ();




extern int dup3 (int __fd, int __fd2, int __flags) throw ();



extern char **__environ;

extern char **environ;





extern int execve (const char *__path, char *const __argv[],
     char *const __envp[]) throw () __attribute__ ((__nonnull__ (1, 2)));




extern int fexecve (int __fd, char *const __argv[], char *const __envp[])
     throw () __attribute__ ((__nonnull__ (2)));




extern int execv (const char *__path, char *const __argv[])
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern int execle (const char *__path, const char *__arg, ...)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern int execl (const char *__path, const char *__arg, ...)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern int execvp (const char *__file, char *const __argv[])
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern int execlp (const char *__file, const char *__arg, ...)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern int execvpe (const char *__file, char *const __argv[],
      char *const __envp[])
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern int nice (int __inc) throw () ;




extern void _exit (int __status) __attribute__ ((__noreturn__));





# 1 "/usr/include/arm-linux-gnueabihf/bits/confname.h" 1 3 4
# 24 "/usr/include/arm-linux-gnueabihf/bits/confname.h" 3 4
enum
  {
    _PC_LINK_MAX,

    _PC_MAX_CANON,

    _PC_MAX_INPUT,

    _PC_NAME_MAX,

    _PC_PATH_MAX,

    _PC_PIPE_BUF,

    _PC_CHOWN_RESTRICTED,

    _PC_NO_TRUNC,

    _PC_VDISABLE,

    _PC_SYNC_IO,

    _PC_ASYNC_IO,

    _PC_PRIO_IO,

    _PC_SOCK_MAXBUF,

    _PC_FILESIZEBITS,

    _PC_REC_INCR_XFER_SIZE,

    _PC_REC_MAX_XFER_SIZE,

    _PC_REC_MIN_XFER_SIZE,

    _PC_REC_XFER_ALIGN,

    _PC_ALLOC_SIZE_MIN,

    _PC_SYMLINK_MAX,

    _PC_2_SYMLINKS

  };


enum
  {
    _SC_ARG_MAX,

    _SC_CHILD_MAX,

    _SC_CLK_TCK,

    _SC_NGROUPS_MAX,

    _SC_OPEN_MAX,

    _SC_STREAM_MAX,

    _SC_TZNAME_MAX,

    _SC_JOB_CONTROL,

    _SC_SAVED_IDS,

    _SC_REALTIME_SIGNALS,

    _SC_PRIORITY_SCHEDULING,

    _SC_TIMERS,

    _SC_ASYNCHRONOUS_IO,

    _SC_PRIORITIZED_IO,

    _SC_SYNCHRONIZED_IO,

    _SC_FSYNC,

    _SC_MAPPED_FILES,

    _SC_MEMLOCK,

    _SC_MEMLOCK_RANGE,

    _SC_MEMORY_PROTECTION,

    _SC_MESSAGE_PASSING,

    _SC_SEMAPHORES,

    _SC_SHARED_MEMORY_OBJECTS,

    _SC_AIO_LISTIO_MAX,

    _SC_AIO_MAX,

    _SC_AIO_PRIO_DELTA_MAX,

    _SC_DELAYTIMER_MAX,

    _SC_MQ_OPEN_MAX,

    _SC_MQ_PRIO_MAX,

    _SC_VERSION,

    _SC_PAGESIZE,


    _SC_RTSIG_MAX,

    _SC_SEM_NSEMS_MAX,

    _SC_SEM_VALUE_MAX,

    _SC_SIGQUEUE_MAX,

    _SC_TIMER_MAX,




    _SC_BC_BASE_MAX,

    _SC_BC_DIM_MAX,

    _SC_BC_SCALE_MAX,

    _SC_BC_STRING_MAX,

    _SC_COLL_WEIGHTS_MAX,

    _SC_EQUIV_CLASS_MAX,

    _SC_EXPR_NEST_MAX,

    _SC_LINE_MAX,

    _SC_RE_DUP_MAX,

    _SC_CHARCLASS_NAME_MAX,


    _SC_2_VERSION,

    _SC_2_C_BIND,

    _SC_2_C_DEV,

    _SC_2_FORT_DEV,

    _SC_2_FORT_RUN,

    _SC_2_SW_DEV,

    _SC_2_LOCALEDEF,


    _SC_PII,

    _SC_PII_XTI,

    _SC_PII_SOCKET,

    _SC_PII_INTERNET,

    _SC_PII_OSI,

    _SC_POLL,

    _SC_SELECT,

    _SC_UIO_MAXIOV,

    _SC_IOV_MAX = _SC_UIO_MAXIOV,

    _SC_PII_INTERNET_STREAM,

    _SC_PII_INTERNET_DGRAM,

    _SC_PII_OSI_COTS,

    _SC_PII_OSI_CLTS,

    _SC_PII_OSI_M,

    _SC_T_IOV_MAX,



    _SC_THREADS,

    _SC_THREAD_SAFE_FUNCTIONS,

    _SC_GETGR_R_SIZE_MAX,

    _SC_GETPW_R_SIZE_MAX,

    _SC_LOGIN_NAME_MAX,

    _SC_TTY_NAME_MAX,

    _SC_THREAD_DESTRUCTOR_ITERATIONS,

    _SC_THREAD_KEYS_MAX,

    _SC_THREAD_STACK_MIN,

    _SC_THREAD_THREADS_MAX,

    _SC_THREAD_ATTR_STACKADDR,

    _SC_THREAD_ATTR_STACKSIZE,

    _SC_THREAD_PRIORITY_SCHEDULING,

    _SC_THREAD_PRIO_INHERIT,

    _SC_THREAD_PRIO_PROTECT,

    _SC_THREAD_PROCESS_SHARED,


    _SC_NPROCESSORS_CONF,

    _SC_NPROCESSORS_ONLN,

    _SC_PHYS_PAGES,

    _SC_AVPHYS_PAGES,

    _SC_ATEXIT_MAX,

    _SC_PASS_MAX,


    _SC_XOPEN_VERSION,

    _SC_XOPEN_XCU_VERSION,

    _SC_XOPEN_UNIX,

    _SC_XOPEN_CRYPT,

    _SC_XOPEN_ENH_I18N,

    _SC_XOPEN_SHM,


    _SC_2_CHAR_TERM,

    _SC_2_C_VERSION,

    _SC_2_UPE,


    _SC_XOPEN_XPG2,

    _SC_XOPEN_XPG3,

    _SC_XOPEN_XPG4,


    _SC_CHAR_BIT,

    _SC_CHAR_MAX,

    _SC_CHAR_MIN,

    _SC_INT_MAX,

    _SC_INT_MIN,

    _SC_LONG_BIT,

    _SC_WORD_BIT,

    _SC_MB_LEN_MAX,

    _SC_NZERO,

    _SC_SSIZE_MAX,

    _SC_SCHAR_MAX,

    _SC_SCHAR_MIN,

    _SC_SHRT_MAX,

    _SC_SHRT_MIN,

    _SC_UCHAR_MAX,

    _SC_UINT_MAX,

    _SC_ULONG_MAX,

    _SC_USHRT_MAX,


    _SC_NL_ARGMAX,

    _SC_NL_LANGMAX,

    _SC_NL_MSGMAX,

    _SC_NL_NMAX,

    _SC_NL_SETMAX,

    _SC_NL_TEXTMAX,


    _SC_XBS5_ILP32_OFF32,

    _SC_XBS5_ILP32_OFFBIG,

    _SC_XBS5_LP64_OFF64,

    _SC_XBS5_LPBIG_OFFBIG,


    _SC_XOPEN_LEGACY,

    _SC_XOPEN_REALTIME,

    _SC_XOPEN_REALTIME_THREADS,


    _SC_ADVISORY_INFO,

    _SC_BARRIERS,

    _SC_BASE,

    _SC_C_LANG_SUPPORT,

    _SC_C_LANG_SUPPORT_R,

    _SC_CLOCK_SELECTION,

    _SC_CPUTIME,

    _SC_THREAD_CPUTIME,

    _SC_DEVICE_IO,

    _SC_DEVICE_SPECIFIC,

    _SC_DEVICE_SPECIFIC_R,

    _SC_FD_MGMT,

    _SC_FIFO,

    _SC_PIPE,

    _SC_FILE_ATTRIBUTES,

    _SC_FILE_LOCKING,

    _SC_FILE_SYSTEM,

    _SC_MONOTONIC_CLOCK,

    _SC_MULTI_PROCESS,

    _SC_SINGLE_PROCESS,

    _SC_NETWORKING,

    _SC_READER_WRITER_LOCKS,

    _SC_SPIN_LOCKS,

    _SC_REGEXP,

    _SC_REGEX_VERSION,

    _SC_SHELL,

    _SC_SIGNALS,

    _SC_SPAWN,

    _SC_SPORADIC_SERVER,

    _SC_THREAD_SPORADIC_SERVER,

    _SC_SYSTEM_DATABASE,

    _SC_SYSTEM_DATABASE_R,

    _SC_TIMEOUTS,

    _SC_TYPED_MEMORY_OBJECTS,

    _SC_USER_GROUPS,

    _SC_USER_GROUPS_R,

    _SC_2_PBS,

    _SC_2_PBS_ACCOUNTING,

    _SC_2_PBS_LOCATE,

    _SC_2_PBS_MESSAGE,

    _SC_2_PBS_TRACK,

    _SC_SYMLOOP_MAX,

    _SC_STREAMS,

    _SC_2_PBS_CHECKPOINT,


    _SC_V6_ILP32_OFF32,

    _SC_V6_ILP32_OFFBIG,

    _SC_V6_LP64_OFF64,

    _SC_V6_LPBIG_OFFBIG,


    _SC_HOST_NAME_MAX,

    _SC_TRACE,

    _SC_TRACE_EVENT_FILTER,

    _SC_TRACE_INHERIT,

    _SC_TRACE_LOG,


    _SC_LEVEL1_ICACHE_SIZE,

    _SC_LEVEL1_ICACHE_ASSOC,

    _SC_LEVEL1_ICACHE_LINESIZE,

    _SC_LEVEL1_DCACHE_SIZE,

    _SC_LEVEL1_DCACHE_ASSOC,

    _SC_LEVEL1_DCACHE_LINESIZE,

    _SC_LEVEL2_CACHE_SIZE,

    _SC_LEVEL2_CACHE_ASSOC,

    _SC_LEVEL2_CACHE_LINESIZE,

    _SC_LEVEL3_CACHE_SIZE,

    _SC_LEVEL3_CACHE_ASSOC,

    _SC_LEVEL3_CACHE_LINESIZE,

    _SC_LEVEL4_CACHE_SIZE,

    _SC_LEVEL4_CACHE_ASSOC,

    _SC_LEVEL4_CACHE_LINESIZE,



    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,

    _SC_RAW_SOCKETS,


    _SC_V7_ILP32_OFF32,

    _SC_V7_ILP32_OFFBIG,

    _SC_V7_LP64_OFF64,

    _SC_V7_LPBIG_OFFBIG,


    _SC_SS_REPL_MAX,


    _SC_TRACE_EVENT_NAME_MAX,

    _SC_TRACE_NAME_MAX,

    _SC_TRACE_SYS_MAX,

    _SC_TRACE_USER_EVENT_MAX,


    _SC_XOPEN_STREAMS,


    _SC_THREAD_ROBUST_PRIO_INHERIT,

    _SC_THREAD_ROBUST_PRIO_PROTECT

  };


enum
  {
    _CS_PATH,


    _CS_V6_WIDTH_RESTRICTED_ENVS,



    _CS_GNU_LIBC_VERSION,

    _CS_GNU_LIBPTHREAD_VERSION,


    _CS_V5_WIDTH_RESTRICTED_ENVS,



    _CS_V7_WIDTH_RESTRICTED_ENVS,



    _CS_LFS_CFLAGS = 1000,

    _CS_LFS_LDFLAGS,

    _CS_LFS_LIBS,

    _CS_LFS_LINTFLAGS,

    _CS_LFS64_CFLAGS,

    _CS_LFS64_LDFLAGS,

    _CS_LFS64_LIBS,

    _CS_LFS64_LINTFLAGS,


    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,

    _CS_XBS5_ILP32_OFF32_LDFLAGS,

    _CS_XBS5_ILP32_OFF32_LIBS,

    _CS_XBS5_ILP32_OFF32_LINTFLAGS,

    _CS_XBS5_ILP32_OFFBIG_CFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LIBS,

    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,

    _CS_XBS5_LP64_OFF64_CFLAGS,

    _CS_XBS5_LP64_OFF64_LDFLAGS,

    _CS_XBS5_LP64_OFF64_LIBS,

    _CS_XBS5_LP64_OFF64_LINTFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LIBS,

    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LIBS,

    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V6_LP64_OFF64_CFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LIBS,

    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V7_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LIBS,

    _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V7_LP64_OFF64_CFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LIBS,

    _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,


    _CS_V6_ENV,

    _CS_V7_ENV

  };
# 613 "/usr/include/unistd.h" 2 3 4


extern long int pathconf (const char *__path, int __name)
     throw () __attribute__ ((__nonnull__ (1)));


extern long int fpathconf (int __fd, int __name) throw ();


extern long int sysconf (int __name) throw ();



extern size_t confstr (int __name, char *__buf, size_t __len) throw ();




extern __pid_t getpid (void) throw ();


extern __pid_t getppid (void) throw ();


extern __pid_t getpgrp (void) throw ();


extern __pid_t __getpgid (__pid_t __pid) throw ();

extern __pid_t getpgid (__pid_t __pid) throw ();






extern int setpgid (__pid_t __pid, __pid_t __pgid) throw ();
# 663 "/usr/include/unistd.h" 3 4
extern int setpgrp (void) throw ();






extern __pid_t setsid (void) throw ();



extern __pid_t getsid (__pid_t __pid) throw ();



extern __uid_t getuid (void) throw ();


extern __uid_t geteuid (void) throw ();


extern __gid_t getgid (void) throw ();


extern __gid_t getegid (void) throw ();




extern int getgroups (int __size, __gid_t __list[]) throw () ;



extern int group_member (__gid_t __gid) throw ();






extern int setuid (__uid_t __uid) throw () ;




extern int setreuid (__uid_t __ruid, __uid_t __euid) throw () ;




extern int seteuid (__uid_t __uid) throw () ;






extern int setgid (__gid_t __gid) throw () ;




extern int setregid (__gid_t __rgid, __gid_t __egid) throw () ;




extern int setegid (__gid_t __gid) throw () ;





extern int getresuid (__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid)
     throw ();



extern int getresgid (__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid)
     throw ();



extern int setresuid (__uid_t __ruid, __uid_t __euid, __uid_t __suid)
     throw () ;



extern int setresgid (__gid_t __rgid, __gid_t __egid, __gid_t __sgid)
     throw () ;






extern __pid_t fork (void) throw ();







extern __pid_t vfork (void) throw ();





extern char *ttyname (int __fd) throw ();



extern int ttyname_r (int __fd, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2))) ;



extern int isatty (int __fd) throw ();




extern int ttyslot (void) throw ();




extern int link (const char *__from, const char *__to)
     throw () __attribute__ ((__nonnull__ (1, 2))) ;




extern int linkat (int __fromfd, const char *__from, int __tofd,
     const char *__to, int __flags)
     throw () __attribute__ ((__nonnull__ (2, 4))) ;




extern int symlink (const char *__from, const char *__to)
     throw () __attribute__ ((__nonnull__ (1, 2))) ;




extern ssize_t readlink (const char *__restrict __path,
    char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (1, 2))) ;




extern int symlinkat (const char *__from, int __tofd,
        const char *__to) throw () __attribute__ ((__nonnull__ (1, 3))) ;


extern ssize_t readlinkat (int __fd, const char *__restrict __path,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (2, 3))) ;



extern int unlink (const char *__name) throw () __attribute__ ((__nonnull__ (1)));



extern int unlinkat (int __fd, const char *__name, int __flag)
     throw () __attribute__ ((__nonnull__ (2)));



extern int rmdir (const char *__path) throw () __attribute__ ((__nonnull__ (1)));



extern __pid_t tcgetpgrp (int __fd) throw ();


extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) throw ();






extern char *getlogin (void);







extern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));




extern int setlogin (const char *__name) throw () __attribute__ ((__nonnull__ (1)));
# 873 "/usr/include/unistd.h" 3 4
# 1 "/usr/include/getopt.h" 1 3 4
# 48 "/usr/include/getopt.h" 3 4
extern "C" {
# 57 "/usr/include/getopt.h" 3 4
extern char *optarg;
# 71 "/usr/include/getopt.h" 3 4
extern int optind;




extern int opterr;



extern int optopt;
# 150 "/usr/include/getopt.h" 3 4
extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)
       throw ();
# 185 "/usr/include/getopt.h" 3 4
}
# 874 "/usr/include/unistd.h" 2 3 4







extern int gethostname (char *__name, size_t __len) throw () __attribute__ ((__nonnull__ (1)));






extern int sethostname (const char *__name, size_t __len)
     throw () __attribute__ ((__nonnull__ (1))) ;



extern int sethostid (long int __id) throw () ;





extern int getdomainname (char *__name, size_t __len)
     throw () __attribute__ ((__nonnull__ (1))) ;
extern int setdomainname (const char *__name, size_t __len)
     throw () __attribute__ ((__nonnull__ (1))) ;





extern int vhangup (void) throw ();


extern int revoke (const char *__file) throw () __attribute__ ((__nonnull__ (1))) ;







extern int profil (unsigned short int *__sample_buffer, size_t __size,
     size_t __offset, unsigned int __scale)
     throw () __attribute__ ((__nonnull__ (1)));





extern int acct (const char *__name) throw ();



extern char *getusershell (void) throw ();
extern void endusershell (void) throw ();
extern void setusershell (void) throw ();





extern int daemon (int __nochdir, int __noclose) throw () ;






extern int chroot (const char *__path) throw () __attribute__ ((__nonnull__ (1))) ;



extern char *getpass (const char *__prompt) __attribute__ ((__nonnull__ (1)));







extern int fsync (int __fd);





extern int syncfs (int __fd) throw ();






extern long int gethostid (void);


extern void sync (void) throw ();





extern int getpagesize (void) throw () __attribute__ ((__const__));




extern int getdtablesize (void) throw ();
# 995 "/usr/include/unistd.h" 3 4
extern int truncate (const char *__file, __off_t __length)
     throw () __attribute__ ((__nonnull__ (1))) ;
# 1007 "/usr/include/unistd.h" 3 4
extern int truncate64 (const char *__file, __off64_t __length)
     throw () __attribute__ ((__nonnull__ (1))) ;
# 1018 "/usr/include/unistd.h" 3 4
extern int ftruncate (int __fd, __off_t __length) throw () ;
# 1028 "/usr/include/unistd.h" 3 4
extern int ftruncate64 (int __fd, __off64_t __length) throw () ;
# 1039 "/usr/include/unistd.h" 3 4
extern int brk (void *__addr) throw () ;





extern void *sbrk (intptr_t __delta) throw ();
# 1060 "/usr/include/unistd.h" 3 4
extern long int syscall (long int __sysno, ...) throw ();
# 1083 "/usr/include/unistd.h" 3 4
extern int lockf (int __fd, int __cmd, __off_t __len) ;
# 1093 "/usr/include/unistd.h" 3 4
extern int lockf64 (int __fd, int __cmd, __off64_t __len) ;
# 1114 "/usr/include/unistd.h" 3 4
extern int fdatasync (int __fildes);







extern char *crypt (const char *__key, const char *__salt)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern void encrypt (char *__glibc_block, int __edflag)
     throw () __attribute__ ((__nonnull__ (1)));






extern void swab (const void *__restrict __from, void *__restrict __to,
    ssize_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));
# 1166 "/usr/include/unistd.h" 3 4
}
# 20 "/usr/xenomai/include/cobalt/unistd.h" 2 3




# 1 "/usr/xenomai/include/cobalt/wrappers.h" 1 3
# 21 "/usr/xenomai/include/cobalt/wrappers.h" 3
# 1 "/usr/xenomai/include/boilerplate/compiler.h" 1 3
# 21 "/usr/xenomai/include/boilerplate/compiler.h" 3
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 1 3 4
# 149 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 426 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
} max_align_t;






  typedef decltype(nullptr) nullptr_t;
# 22 "/usr/xenomai/include/boilerplate/compiler.h" 2 3
# 62 "/usr/xenomai/include/boilerplate/compiler.h" 3
extern "C" {


void __invalid_operand_size(void);
# 106 "/usr/xenomai/include/boilerplate/compiler.h" 3
}
# 22 "/usr/xenomai/include/cobalt/wrappers.h" 2 3
# 25 "/usr/xenomai/include/cobalt/unistd.h" 2 3


extern "C" {


__typeof__(ssize_t) __cobalt_read(int fd, void *buf, size_t nbyte); __typeof__(ssize_t) __real_read(int fd, void *buf, size_t nbyte); __typeof__(ssize_t) __wrap_read(int fd, void *buf, size_t nbyte);

__typeof__(ssize_t) __cobalt_write(int fd, const void *buf, size_t nbyte); __typeof__(ssize_t) __real_write(int fd, const void *buf, size_t nbyte); __typeof__(ssize_t) __wrap_write(int fd, const void *buf, size_t nbyte);

__typeof__(int) __cobalt_close(int fildes); __typeof__(int) __real_close(int fildes); __typeof__(int) __wrap_close(int fildes);

__typeof__(unsigned int) __cobalt_sleep(unsigned int seconds); __typeof__(unsigned int) __real_sleep(unsigned int seconds); __typeof__(unsigned int) __wrap_sleep(unsigned int seconds);


}
# 54 "./include/Bela.h" 2
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stdbool.h" 1 3 4
# 55 "./include/Bela.h" 2
# 1 "/usr/xenomai/include/cobalt/stdio.h" 1
# 19 "/usr/xenomai/include/cobalt/stdio.h"
       
# 20 "/usr/xenomai/include/cobalt/stdio.h" 3
# 1 "/usr/include/stdio.h" 1 3 4
# 29 "/usr/include/stdio.h" 3 4
extern "C" {



# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 1 3 4
# 34 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 31 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "/usr/include/libio.h" 2 3 4
# 49 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 50 "/usr/include/libio.h" 2 3 4
# 144 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;





typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 173 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 241 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3 4
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};





struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);




extern "C" {


extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) throw ();
extern int _IO_ferror (_IO_FILE *__fp) throw ();

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) throw ();
extern void _IO_funlockfile (_IO_FILE *) throw ();
extern int _IO_ftrylockfile (_IO_FILE *) throw ();
# 459 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) throw ();
# 521 "/usr/include/libio.h" 3 4
}
# 75 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 110 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 166 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/stdio_lim.h" 1 3 4
# 167 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) throw ();

extern int rename (const char *__old, const char *__new) throw ();




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) throw ();








extern FILE *tmpfile (void) ;
# 207 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) throw () ;





extern char *tmpnam_r (char *__s) throw () ;
# 229 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     throw () __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 254 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 264 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 297 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) ;
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, const char *__modes) throw () ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw () ;




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  throw () ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) throw () ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();








extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) throw ();





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) throw ();
# 465 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));
# 524 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 552 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 563 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 596 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 640 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 651 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 667 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 728 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
# 739 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 775 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 794 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 817 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);




extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw () ;

extern int ferror (FILE *__stream) throw () ;




extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw () ;
extern int ferror_unlocked (FILE *__stream) throw () ;








extern void perror (const char *__s);






# 1 "/usr/include/arm-linux-gnueabihf/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/arm-linux-gnueabihf/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];
# 856 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) throw () ;




extern int fileno_unlocked (FILE *__stream) throw () ;
# 874 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw () ;


extern void funlockfile (FILE *__stream) throw ();
# 935 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/stdio.h" 1 3 4
# 35 "/usr/include/arm-linux-gnueabihf/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fgetc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}





extern __inline __attribute__ ((__gnu_inline__)) int
getc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}


extern __inline __attribute__ ((__gnu_inline__)) int
getchar_unlocked (void)
{
  return (__builtin_expect (((stdin)->_IO_read_ptr >= (stdin)->_IO_read_end), 0) ? __uflow (stdin) : *(unsigned char *) (stdin)->_IO_read_ptr++);
}




extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fputc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) int
putc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}


extern __inline __attribute__ ((__gnu_inline__)) int
putchar_unlocked (int __c)
{
  return (__builtin_expect (((stdout)->_IO_write_ptr >= (stdout)->_IO_write_end), 0) ? __overflow (stdout, (unsigned char) (__c)) : (unsigned char) (*(stdout)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) __ssize_t
getline (char **__lineptr, size_t *__n, FILE *__stream)
{
  return __getdelim (__lineptr, __n, '\n', __stream);
}





extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__leaf__)) feof_unlocked (FILE *__stream) throw ()
{
  return (((__stream)->_flags & 0x10) != 0);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__leaf__)) ferror_unlocked (FILE *__stream) throw ()
{
  return (((__stream)->_flags & 0x20) != 0);
}
# 936 "/usr/include/stdio.h" 2 3 4
# 944 "/usr/include/stdio.h" 3 4
}
# 21 "/usr/xenomai/include/cobalt/stdio.h" 2 3




# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h" 1 3 4
# 26 "/usr/xenomai/include/cobalt/stdio.h" 2 3
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stdarg.h" 1 3 4
# 27 "/usr/xenomai/include/cobalt/stdio.h" 2 3
# 1 "/usr/xenomai/include/xeno_config.h" 1 3
# 28 "/usr/xenomai/include/cobalt/stdio.h" 2 3



extern "C" {


__typeof__(int) __cobalt_vfprintf(FILE *stream, const char *fmt, va_list args); __typeof__(int) __real_vfprintf(FILE *stream, const char *fmt, va_list args); __typeof__(int) __wrap_vfprintf(FILE *stream, const char *fmt, va_list args);



__typeof__(int) __cobalt___vfprintf_chk(FILE *stream, int level, const char *fmt, va_list ap); __typeof__(int) __real___vfprintf_chk(FILE *stream, int level, const char *fmt, va_list ap); __typeof__(int) __wrap___vfprintf_chk(FILE *stream, int level, const char *fmt, va_list ap)
                                 ;

__typeof__(int) __cobalt___vprintf_chk(int flag, const char *fmt, va_list ap); __typeof__(int) __real___vprintf_chk(int flag, const char *fmt, va_list ap); __typeof__(int) __wrap___vprintf_chk(int flag, const char *fmt, va_list ap)
                                       ;

__typeof__(int) __cobalt___printf_chk(int flag, const char *fmt, ...); __typeof__(int) __real___printf_chk(int flag, const char *fmt, ...); __typeof__(int) __wrap___printf_chk(int flag, const char *fmt, ...);

__typeof__(int) __cobalt___fprintf_chk(FILE *fp, int flag, const char *fmt, ...); __typeof__(int) __real___fprintf_chk(FILE *fp, int flag, const char *fmt, ...); __typeof__(int) __wrap___fprintf_chk(FILE *fp, int flag, const char *fmt, ...);

int __rt_vfprintf_chk(FILE *stream, int level,
        const char *fmt, va_list args);

void __rt_vsyslog_chk(int priority, int level,
        const char *fmt, va_list args);



__typeof__(int) __cobalt_vprintf(const char *fmt, va_list args); __typeof__(int) __real_vprintf(const char *fmt, va_list args); __typeof__(int) __wrap_vprintf(const char *fmt, va_list args);

__typeof__(int) __cobalt_fprintf(FILE *stream, const char *fmt, ...); __typeof__(int) __real_fprintf(FILE *stream, const char *fmt, ...); __typeof__(int) __wrap_fprintf(FILE *stream, const char *fmt, ...);

__typeof__(int) __cobalt_printf(const char *fmt, ...); __typeof__(int) __real_printf(const char *fmt, ...); __typeof__(int) __wrap_printf(const char *fmt, ...);

__typeof__(int) __cobalt_puts(const char *s); __typeof__(int) __real_puts(const char *s); __typeof__(int) __wrap_puts(const char *s);

__typeof__(int) __cobalt_fputs(const char *s, FILE *stream); __typeof__(int) __real_fputs(const char *s, FILE *stream); __typeof__(int) __wrap_fputs(const char *s, FILE *stream);


__typeof__(int) __cobalt_putchar(int c); __typeof__(int) __real_putchar(int c); __typeof__(int) __wrap_putchar(int c);
# 80 "/usr/xenomai/include/cobalt/stdio.h" 3
__typeof__(int) __cobalt_fputc(int c, FILE *stream); __typeof__(int) __real_fputc(int c, FILE *stream); __typeof__(int) __wrap_fputc(int c, FILE *stream);
# 92 "/usr/xenomai/include/cobalt/stdio.h" 3
__typeof__(size_t) __cobalt_fwrite(const void *ptr, size_t sz, size_t nmemb, FILE *stream); __typeof__(size_t) __real_fwrite(const void *ptr, size_t sz, size_t nmemb, FILE *stream); __typeof__(size_t) __wrap_fwrite(const void *ptr, size_t sz, size_t nmemb, FILE *stream)
                                                                    ;

__typeof__(int) __cobalt_fclose(FILE *stream); __typeof__(int) __real_fclose(FILE *stream); __typeof__(int) __wrap_fclose(FILE *stream);

int rt_vfprintf(FILE *stream, const char *format, va_list args);

int rt_vprintf(const char *format, va_list args);

int rt_fprintf(FILE *stream, const char *format, ...);

int rt_printf(const char *format, ...);

int rt_puts(const char *s);

int rt_fputs(const char *s, FILE *stream);

int rt_fputc(int c, FILE *stream);

int rt_putchar(int c);

size_t rt_fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream);

void rt_syslog(int priority, const char *format, ...);

void rt_vsyslog(int priority, const char *format, va_list args);

int rt_print_init(size_t buffer_size, const char *name);

const char *rt_print_buffer_name(void);

void rt_print_flush_buffers(void);


}
# 56 "./include/Bela.h" 2




# 59 "./include/Bela.h"
int rt_printf(const char *format, ...);
int rt_fprintf(FILE *stream, const char *format, ...);
int rt_vprintf(const char *format, va_list ap);
int rt_vfprintf(FILE *stream, const char *format, va_list ap);

typedef enum
{
 BelaHw_NoHw = -1,
 BelaHw_Bela,
 BelaHw_BelaMini,
 BelaHw_Salt,
 BelaHw_CtagFace,
 BelaHw_CtagBeast,
 BelaHw_CtagFaceBela,
 BelaHw_CtagBeastBela,
} BelaHw;

# 1 "./include/GPIOcontrol.h" 1
# 41 "./include/GPIOcontrol.h"
extern "C"
{
# 53 "./include/GPIOcontrol.h"
enum PIN_DIRECTION{
 INPUT_PIN=0,
 OUTPUT_PIN=1
};

enum PIN_VALUE{
 LOW=0,
 HIGH=1
};




int gpio_setup(unsigned int gpio, int out_flag);
int gpio_export(unsigned int gpio);
int gpio_unexport(unsigned int gpio);
int gpio_set_dir(unsigned int gpio, int out_flag);
int gpio_set_value(unsigned int gpio, int value);
int gpio_get_value(unsigned int gpio, unsigned int *value);
int gpio_set_edge(unsigned int gpio, char *edge);
int gpio_fd_open(unsigned int gpio, int writeFlag);
int gpio_fd_close(int fd);
int gpio_write(int fd, int value);
int gpio_read(int fd, unsigned int *value);
int gpio_dismiss(int fd, unsigned int gpio);

int led_set_trigger(unsigned int lednum, const char *trigger);


}
# 77 "./include/Bela.h" 2
# 138 "./include/Bela.h"
struct option;
# 148 "./include/Bela.h"
typedef struct {
# 166 "./include/Bela.h"
 const float * const audioIn;
# 181 "./include/Bela.h"
 float * const audioOut;
# 200 "./include/Bela.h"
 const float * const analogIn;
# 215 "./include/Bela.h"
 float * const analogOut;
# 225 "./include/Bela.h"
 uint32_t * const digital;
# 239 "./include/Bela.h"
 const uint32_t audioFrames;

 const uint32_t audioInChannels;

 const uint32_t audioOutChannels;

 const float audioSampleRate;
# 258 "./include/Bela.h"
 const uint32_t analogFrames;




 const uint32_t analogInChannels;




 const uint32_t analogOutChannels;
# 279 "./include/Bela.h"
 const float analogSampleRate;


 const uint32_t digitalFrames;



 const uint32_t digitalChannels;

 const float digitalSampleRate;







 const uint64_t audioFramesElapsed;





 const uint32_t multiplexerChannels;





 const uint32_t multiplexerStartingChannel;






 const float * const multiplexerAnalogIn;





 const uint32_t audioExpanderEnabled;
# 331 "./include/Bela.h"
 const uint32_t flags;
} BelaContext;
# 343 "./include/Bela.h"
typedef struct {






 int periodSize;

 int useAnalog;

 int useDigital;

 int numAudioInChannels;

 int numAudioOutChannels;

 int numAnalogInChannels;

 int numAnalogOutChannels;

 int numDigitalChannels;


 int beginMuted;

 float dacLevel;

 float adcLevel;

 float pgaGain[2];

 float headphoneLevel;

 int numMuxChannels;

 unsigned int audioExpanderInputs;

 unsigned int audioExpanderOutputs;


 int pruNumber;

 char pruFilename[256];

 int detectUnderruns;

 int verbose;

 int enableLED;

 int enableCapeButtonMonitoring;




 int highPerformanceMode;





 int interleave;



 int analogOutputsPersist;


 int uniformSampleRate;


 unsigned int audioThreadStackSize;


 unsigned int auxiliaryTaskStackSize;


 bool (*setup)(BelaContext*, void*);
 void (*render)(BelaContext*, void*);
 void (*cleanup)(BelaContext*, void*);




 int ampMutePin;

 int receivePort;

 int transmitPort;
 char serverName[256];


 char board[256];

} BelaInitSettings;






typedef void* AuxiliaryTask;
# 454 "./include/Bela.h"
extern int volatile gShouldStop;
# 484 "./include/Bela.h"
bool setup(BelaContext *context, void *userData);
# 500 "./include/Bela.h"
void render(BelaContext *context, void *userData);
# 517 "./include/Bela.h"
void cleanup(BelaContext *context, void *userData);
# 540 "./include/Bela.h"
BelaInitSettings* Bela_InitSettings_alloc();
# 550 "./include/Bela.h"
void Bela_InitSettings_free(BelaInitSettings* settings);
# 561 "./include/Bela.h"
void Bela_defaultSettings(BelaInitSettings *settings);

#pragma weak Bela_userSettings
# 575 "./include/Bela.h"
void Bela_userSettings(BelaInitSettings *settings);
# 598 "./include/Bela.h"
int Bela_getopt_long(int argc, char *argv[], const char *customShortOptions,
       const struct option *customLongOptions, BelaInitSettings *settings);
# 608 "./include/Bela.h"
void Bela_usage();




void Bela_getVersion(int* major, int* minor, int* bugfix);







void Bela_setVerboseLevel(int level);





BelaHw Bela_detectHw(void);
# 646 "./include/Bela.h"
int Bela_initAudio(BelaInitSettings *settings, void *userData);
# 656 "./include/Bela.h"
int Bela_startAudio();
# 666 "./include/Bela.h"
int Bela_runInSameThread();







void Bela_stopAudio();
# 683 "./include/Bela.h"
void Bela_cleanupAudio();
# 712 "./include/Bela.h"
int Bela_setDACLevel(float decibels);
# 728 "./include/Bela.h"
int Bela_setADCLevel(float decibels);
# 747 "./include/Bela.h"
int Bela_setPgaGain(float decibels, int channel);
# 764 "./include/Bela.h"
int Bela_setHeadphoneLevel(float decibels);
# 779 "./include/Bela.h"
int Bela_muteSpeakers(int mute);
# 815 "./include/Bela.h"
AuxiliaryTask Bela_createAuxiliaryTask(void (*callback)(void*), int priority, const char *name, void* arg

= 
# 817 "./include/Bela.h" 3 4
 __null


# 819 "./include/Bela.h"
);
# 836 "./include/Bela.h"
int Bela_scheduleAuxiliaryTask(AuxiliaryTask task);
# 856 "./include/Bela.h"
int Bela_startAuxiliaryTask(AuxiliaryTask task);
int Bela_startAllAuxiliaryTasks();
void Bela_stopAllAuxiliaryTasks();
void Bela_deleteAllAuxiliaryTasks();


# 1 "./include/Utilities.h" 1
# 16 "./include/Utilities.h"
# 1 "./include/Bela.h" 1
# 17 "./include/Utilities.h" 2
# 89 "./include/Utilities.h"
static inline float audioRead(BelaContext *context, int frame, int channel);




static inline float audioReadNI(BelaContext *context, int frame, int channel);
# 109 "./include/Utilities.h"
static inline void audioWrite(BelaContext *context, int frame, int channel, float value);




static inline void audioWriteNI(BelaContext *context, int frame, int channel, float value);
# 129 "./include/Utilities.h"
static inline float analogRead(BelaContext *context, int frame, int channel);




static inline float analogReadNI(BelaContext *context, int frame, int channel);
# 152 "./include/Utilities.h"
static inline void analogWrite(BelaContext *context, int frame, int channel, float value);




static inline void analogWriteNI(BelaContext *context, int frame, int channel, float value);
# 178 "./include/Utilities.h"
static inline void analogWriteOnce(BelaContext *context, int frame, int channel, float value);




static inline void analogWriteOnceNI(BelaContext *context, int frame, int channel, float value);
# 199 "./include/Utilities.h"
static inline int digitalRead(BelaContext *context, int frame, int channel);
# 217 "./include/Utilities.h"
static inline void digitalWrite(BelaContext *context, int frame, int channel, int value);
# 237 "./include/Utilities.h"
static inline void digitalWriteOnce(BelaContext *context, int frame, int channel, int value);
# 255 "./include/Utilities.h"
static inline void pinMode(BelaContext *context, int frame, int channel, int mode);
# 273 "./include/Utilities.h"
static inline void pinModeOnce(BelaContext *context, int frame, int channel, int mode);
# 298 "./include/Utilities.h"
static inline float multiplexerAnalogRead(BelaContext *context, int input, int muxChannel);
# 321 "./include/Utilities.h"
static inline unsigned int multiplexerChannelForFrame(BelaContext *context, int frame);
# 352 "./include/Utilities.h"
static inline float map(float x, float in_min, float in_max, float out_min, float out_max);
# 370 "./include/Utilities.h"
static inline float constrain(float x, float min_val, float max_val);






static inline float min(float x, float y);






static inline float max(float x, float y);





static inline float audioRead(BelaContext *context, int frame, int channel) {
 return context->audioIn[frame * context->audioInChannels + channel];
}

static inline float audioReadNI(BelaContext *context, int frame, int channel) {
 return context->audioIn[channel * context->audioFrames + frame];
}




static inline void audioWrite(BelaContext *context, int frame, int channel, float value) {
 context->audioOut[frame * context->audioOutChannels + channel] = value;
}

static inline void audioWriteNI(BelaContext *context, int frame, int channel, float value) {
 context->audioOut[channel * context->audioFrames + frame] = value;
}




static inline float analogRead(BelaContext *context, int frame, int channel) {
 return context->analogIn[frame * context->analogInChannels + channel];
}

static inline float analogReadNI(BelaContext *context, int frame, int channel) {
 return context->analogIn[channel * context->analogFrames + frame];
}




static inline void analogWriteOnce(BelaContext *context, int frame, int channel, float value) {
 context->analogOut[frame * context->analogOutChannels + channel] = value;
}

static inline void analogWriteOnceNI(BelaContext *context, int frame, int channel, float value) {
 context->analogOut[channel * context->analogFrames + frame] = value;
}





static inline void analogWrite(BelaContext *context, int frame, int channel, float value) {
 unsigned int f;
 for(f = frame; f < context->analogFrames; f++)
  analogWriteOnce(context, f, channel, value);
}

static inline void analogWriteNI(BelaContext *context, int frame, int channel, float value) {
 unsigned int f;
 for(f = frame; f < context->analogFrames; f++)
  analogWriteOnceNI(context, f, channel, value);
}




static inline int digitalRead(BelaContext *context, int frame, int channel) {
 return (((context->digital[frame]) >> (channel + 16)) & 1);
}




static inline void digitalWrite(BelaContext *context, int frame, int channel, int value) {
 unsigned int f;
 for(f = frame; f < context->digitalFrames; f++) {
  if(value)
   context->digital[f] |= 1 << (channel + 16);
  else
   context->digital[f] &= ~(1 << (channel + 16));
 }
}




static inline void digitalWriteOnce(BelaContext *context, int frame, int channel, int value) {
 if(value)
  context->digital[frame] |= 1 << (channel + 16);
 else
  context->digital[frame] &= ~(1 << (channel + 16));
}




static inline void pinMode(BelaContext *context, int frame, int channel, int mode) {
 unsigned int f;
 for(f = frame; f < context->digitalFrames; f++) {
  if(mode == 0x0)
   context->digital[f] |= (1 << channel);
  else
   context->digital[f] &= ~(1 << channel);
 }
}




static inline void pinModeOnce(BelaContext *context, int frame, int channel, int mode) {
 if(mode == 0x0)
  context->digital[frame] |= (1 << channel);
 else
  context->digital[frame] &= ~(1 << channel);
}




static inline float multiplexerAnalogRead(BelaContext *context, int input, int muxChannel) {
 return context->multiplexerAnalogIn[muxChannel * context->analogInChannels + input];
}




static inline unsigned int multiplexerChannelForFrame(BelaContext *context, int frame) {
 if(context->multiplexerChannels <= 1)
  return 1;
 return (context->multiplexerStartingChannel + frame) % context->multiplexerChannels;
}







static inline float map(float x, float in_min, float in_max, float out_min, float out_max)
{
 return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}






static inline float constrain(float x, float min_val, float max_val)
{
 if(x < min_val) return min_val;
 if(x > max_val) return max_val;
 return x;
}

static inline float max(float x, float y){
 return x > y ? x : y;
}

static inline float min(float x, float y){
 return x < y ? x : y;
}
# 863 "./include/Bela.h" 2


}
# 2 "/root/Bela/projects/bela-game/render.cpp" 2
# 1 "/usr/local/include/aubio/aubio.h" 1 3
# 167 "/usr/local/include/aubio/aubio.h" 3

# 167 "/usr/local/include/aubio/aubio.h" 3
extern "C"
{



# 1 "/usr/local/include/aubio/types.h" 1 3
# 31 "/usr/local/include/aubio/types.h" 3
extern "C" {
# 41 "/usr/local/include/aubio/types.h" 3
typedef float smpl_t;
# 51 "/usr/local/include/aubio/types.h" 3
typedef double lsmp_t;
# 60 "/usr/local/include/aubio/types.h" 3
typedef unsigned int uint_t;

typedef int sint_t;

typedef char char_t;


}
# 173 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/fvec.h" 1 3
# 25 "/usr/local/include/aubio/fvec.h" 3
extern "C" {
# 67 "/usr/local/include/aubio/fvec.h" 3
typedef struct {
  uint_t length;
  smpl_t *data;
} fvec_t;






fvec_t * new_fvec(uint_t length);






void del_fvec(fvec_t *s);







smpl_t fvec_get_sample(const fvec_t *s, uint_t position);
# 101 "/usr/local/include/aubio/fvec.h" 3
void fvec_set_sample(fvec_t *s, smpl_t data, uint_t position);






smpl_t * fvec_get_data(const fvec_t *s);






void fvec_print(const fvec_t *s);







void fvec_set_all (fvec_t *s, smpl_t val);






void fvec_zeros(fvec_t *s);






void fvec_ones(fvec_t *s);






void fvec_rev(fvec_t *s);
# 155 "/usr/local/include/aubio/fvec.h" 3
void fvec_weight(fvec_t *s, const fvec_t *weight);







void fvec_copy(const fvec_t *s, fvec_t *t);
# 172 "/usr/local/include/aubio/fvec.h" 3
void fvec_weighted_copy(const fvec_t *in, const fvec_t *weight, fvec_t *out);


}
# 174 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/cvec.h" 1 3
# 25 "/usr/local/include/aubio/cvec.h" 3
extern "C" {
# 63 "/usr/local/include/aubio/cvec.h" 3
typedef struct {
  uint_t length;
  smpl_t *norm;
  smpl_t *phas;
} cvec_t;
# 80 "/usr/local/include/aubio/cvec.h" 3
cvec_t * new_cvec(uint_t length);






void del_cvec(cvec_t *s);
# 101 "/usr/local/include/aubio/cvec.h" 3
void cvec_norm_set_sample (cvec_t *s, smpl_t val, uint_t position);
# 115 "/usr/local/include/aubio/cvec.h" 3
void cvec_phas_set_sample (cvec_t *s, smpl_t val, uint_t position);
# 128 "/usr/local/include/aubio/cvec.h" 3
smpl_t cvec_norm_get_sample (cvec_t *s, uint_t position);
# 142 "/usr/local/include/aubio/cvec.h" 3
smpl_t cvec_phas_get_sample (cvec_t *s, uint_t position);
# 153 "/usr/local/include/aubio/cvec.h" 3
smpl_t * cvec_norm_get_data (const cvec_t *s);
# 165 "/usr/local/include/aubio/cvec.h" 3
smpl_t * cvec_phas_get_data (const cvec_t *s);






void cvec_print(const cvec_t *s);







void cvec_copy(const cvec_t *s, cvec_t *t);







void cvec_norm_set_all (cvec_t *s, smpl_t val);






void cvec_norm_zeros(cvec_t *s);






void cvec_norm_ones(cvec_t *s);







void cvec_phas_set_all (cvec_t *s, smpl_t val);






void cvec_phas_zeros(cvec_t *s);






void cvec_phas_ones(cvec_t *s);






void cvec_zeros(cvec_t *s);
# 241 "/usr/local/include/aubio/cvec.h" 3
void cvec_logmag(cvec_t *s, smpl_t lambda);


}
# 175 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/lvec.h" 1 3
# 25 "/usr/local/include/aubio/lvec.h" 3
extern "C" {
# 43 "/usr/local/include/aubio/lvec.h" 3
typedef struct {
  uint_t length;
  lsmp_t *data;
} lvec_t;






lvec_t * new_lvec(uint_t length);





void del_lvec(lvec_t *s);







lsmp_t lvec_get_sample(lvec_t *s, uint_t position);
# 76 "/usr/local/include/aubio/lvec.h" 3
void lvec_set_sample(lvec_t *s, lsmp_t data, uint_t position);






lsmp_t * lvec_get_data(const lvec_t *s);






void lvec_print(const lvec_t *s);







void lvec_set_all(lvec_t *s, smpl_t val);






void lvec_zeros(lvec_t *s);






void lvec_ones(lvec_t *s);


}
# 176 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/fmat.h" 1 3
# 25 "/usr/local/include/aubio/fmat.h" 3
extern "C" {
# 40 "/usr/local/include/aubio/fmat.h" 3
typedef struct {
  uint_t length;
  uint_t height;
  smpl_t **data;
} fmat_t;







fmat_t * new_fmat(uint_t height, uint_t length);






void del_fmat(fmat_t *s);
# 68 "/usr/local/include/aubio/fmat.h" 3
smpl_t fmat_get_sample(const fmat_t *s, uint_t channel, uint_t position);
# 78 "/usr/local/include/aubio/fmat.h" 3
void fmat_set_sample(fmat_t *s, smpl_t data, uint_t channel, uint_t position);
# 87 "/usr/local/include/aubio/fmat.h" 3
void fmat_get_channel (const fmat_t *s, uint_t channel, fvec_t *output);







smpl_t * fmat_get_channel_data (const fmat_t *s, uint_t channel);






smpl_t ** fmat_get_data(const fmat_t *s);






void fmat_print(const fmat_t *s);







void fmat_set(fmat_t *s, smpl_t val);






void fmat_zeros(fmat_t *s);






void fmat_ones(fmat_t *s);






void fmat_rev(fmat_t *s);
# 149 "/usr/local/include/aubio/fmat.h" 3
void fmat_weight(fmat_t *s, const fmat_t *weight);







void fmat_copy(const fmat_t *s, fmat_t *t);
# 166 "/usr/local/include/aubio/fmat.h" 3
void fmat_vecmul(const fmat_t *s, const fvec_t *scale, fvec_t *output);


}
# 177 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/musicutils.h" 1 3
# 29 "/usr/local/include/aubio/musicutils.h" 3
extern "C" {
# 38 "/usr/local/include/aubio/musicutils.h" 3
fvec_t *new_aubio_window (char_t * window_type, uint_t size);
# 63 "/usr/local/include/aubio/musicutils.h" 3
uint_t fvec_set_window (fvec_t * window, char_t * window_type);
# 75 "/usr/local/include/aubio/musicutils.h" 3
smpl_t aubio_unwrap2pi (smpl_t phase);


smpl_t aubio_bintomidi (smpl_t bin, smpl_t samplerate, smpl_t fftsize);


smpl_t aubio_miditobin (smpl_t midi, smpl_t samplerate, smpl_t fftsize);


smpl_t aubio_bintofreq (smpl_t bin, smpl_t samplerate, smpl_t fftsize);


smpl_t aubio_freqtobin (smpl_t freq, smpl_t samplerate, smpl_t fftsize);


smpl_t aubio_freqtomidi (smpl_t freq);


smpl_t aubio_miditofreq (smpl_t midi);







void aubio_cleanup (void);
# 113 "/usr/local/include/aubio/musicutils.h" 3
smpl_t aubio_zero_crossing_rate (fvec_t * v);
# 124 "/usr/local/include/aubio/musicutils.h" 3
smpl_t aubio_level_lin (const fvec_t * v);
# 137 "/usr/local/include/aubio/musicutils.h" 3
smpl_t aubio_db_spl (const fvec_t * v);
# 147 "/usr/local/include/aubio/musicutils.h" 3
uint_t aubio_silence_detection (const fvec_t * v, smpl_t threshold);
# 157 "/usr/local/include/aubio/musicutils.h" 3
smpl_t aubio_level_detection (const fvec_t * v, smpl_t threshold);







void fvec_clamp(fvec_t *in, smpl_t absmax);


}
# 178 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/vecutils.h" 1 3
# 31 "/usr/local/include/aubio/vecutils.h" 3
extern "C" {







void fvec_exp (fvec_t *s);






void fvec_cos (fvec_t *s);






void fvec_sin (fvec_t *s);






void fvec_abs (fvec_t *s);






void fvec_sqrt (fvec_t *s);






void fvec_log10 (fvec_t *s);






void fvec_log (fvec_t *s);






void fvec_floor (fvec_t *s);






void fvec_ceil (fvec_t *s);






void fvec_round (fvec_t *s);







void fvec_pow (fvec_t *s, smpl_t pow);


}
# 179 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/temporal/resampler.h" 1 3
# 34 "/usr/local/include/aubio/temporal/resampler.h" 3
extern "C" {



typedef struct _aubio_resampler_t aubio_resampler_t;







aubio_resampler_t *new_aubio_resampler (smpl_t ratio, uint_t type);


void del_aubio_resampler (aubio_resampler_t * s);
# 58 "/usr/local/include/aubio/temporal/resampler.h" 3
void aubio_resampler_do (aubio_resampler_t * s, const fvec_t * input,
    fvec_t * output);


}
# 180 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/temporal/filter.h" 1 3
# 66 "/usr/local/include/aubio/temporal/filter.h" 3
extern "C" {





typedef struct _aubio_filter_t aubio_filter_t;







void aubio_filter_do (aubio_filter_t * f, fvec_t * in);
# 89 "/usr/local/include/aubio/temporal/filter.h" 3
void aubio_filter_do_outplace (aubio_filter_t * f, const fvec_t * in, fvec_t * out);
# 98 "/usr/local/include/aubio/temporal/filter.h" 3
void aubio_filter_do_filtfilt (aubio_filter_t * f, fvec_t * in, fvec_t * tmp);
# 107 "/usr/local/include/aubio/temporal/filter.h" 3
lvec_t *aubio_filter_get_feedback (const aubio_filter_t * f);
# 116 "/usr/local/include/aubio/temporal/filter.h" 3
lvec_t *aubio_filter_get_feedforward (const aubio_filter_t * f);
# 125 "/usr/local/include/aubio/temporal/filter.h" 3
uint_t aubio_filter_get_order (const aubio_filter_t * f);
# 134 "/usr/local/include/aubio/temporal/filter.h" 3
uint_t aubio_filter_get_samplerate (const aubio_filter_t * f);
# 144 "/usr/local/include/aubio/temporal/filter.h" 3
uint_t aubio_filter_set_samplerate (aubio_filter_t * f, uint_t samplerate);






void aubio_filter_do_reset (aubio_filter_t * f);
# 163 "/usr/local/include/aubio/temporal/filter.h" 3
aubio_filter_t *new_aubio_filter (uint_t order);






void del_aubio_filter (aubio_filter_t * f);


}
# 181 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/temporal/biquad.h" 1 3
# 43 "/usr/local/include/aubio/temporal/biquad.h" 3
extern "C" {
# 56 "/usr/local/include/aubio/temporal/biquad.h" 3
uint_t aubio_filter_set_biquad (aubio_filter_t * f, lsmp_t b0, lsmp_t b1,
    lsmp_t b2, lsmp_t a1, lsmp_t a2);
# 68 "/usr/local/include/aubio/temporal/biquad.h" 3
aubio_filter_t *new_aubio_filter_biquad (lsmp_t b0, lsmp_t b1, lsmp_t b2,
    lsmp_t a1, lsmp_t a2);


}
# 182 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/temporal/a_weighting.h" 1 3
# 60 "/usr/local/include/aubio/temporal/a_weighting.h" 3
extern "C" {
# 72 "/usr/local/include/aubio/temporal/a_weighting.h" 3
aubio_filter_t *new_aubio_filter_a_weighting (uint_t samplerate);
# 82 "/usr/local/include/aubio/temporal/a_weighting.h" 3
uint_t aubio_filter_set_a_weighting (aubio_filter_t * f, uint_t samplerate);


}
# 183 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/temporal/c_weighting.h" 1 3
# 60 "/usr/local/include/aubio/temporal/c_weighting.h" 3
extern "C" {
# 72 "/usr/local/include/aubio/temporal/c_weighting.h" 3
aubio_filter_t *new_aubio_filter_c_weighting (uint_t samplerate);
# 82 "/usr/local/include/aubio/temporal/c_weighting.h" 3
uint_t aubio_filter_set_c_weighting (aubio_filter_t * f, uint_t samplerate);


}
# 184 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/fft.h" 1 3
# 38 "/usr/local/include/aubio/spectral/fft.h" 3
extern "C" {







typedef struct _aubio_fft_t aubio_fft_t;






aubio_fft_t * new_aubio_fft (uint_t size);





void del_aubio_fft(aubio_fft_t * s);
# 68 "/usr/local/include/aubio/spectral/fft.h" 3
void aubio_fft_do (aubio_fft_t *s, const fvec_t * input, cvec_t * spectrum);







void aubio_fft_rdo (aubio_fft_t *s, const cvec_t * spectrum, fvec_t * output);
# 85 "/usr/local/include/aubio/spectral/fft.h" 3
void aubio_fft_do_complex (aubio_fft_t *s, const fvec_t * input, fvec_t * compspec);







void aubio_fft_rdo_complex (aubio_fft_t *s, const fvec_t * compspec, fvec_t * output);







void aubio_fft_get_spectrum(const fvec_t * compspec, cvec_t * spectrum);






void aubio_fft_get_realimag(const cvec_t * spectrum, fvec_t * compspec);







void aubio_fft_get_phas(const fvec_t * compspec, cvec_t * spectrum);






void aubio_fft_get_imag(const cvec_t * spectrum, fvec_t * compspec);







void aubio_fft_get_norm(const fvec_t * compspec, cvec_t * spectrum);






void aubio_fft_get_real(const cvec_t * spectrum, fvec_t * compspec);


}
# 185 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/dct.h" 1 3
# 37 "/usr/local/include/aubio/spectral/dct.h" 3
extern "C" {
# 46 "/usr/local/include/aubio/spectral/dct.h" 3
typedef struct _aubio_dct_t aubio_dct_t;






aubio_dct_t * new_aubio_dct(uint_t size);
# 62 "/usr/local/include/aubio/spectral/dct.h" 3
void aubio_dct_do (aubio_dct_t *s, const fvec_t * input, fvec_t * dct_output);
# 71 "/usr/local/include/aubio/spectral/dct.h" 3
void aubio_dct_rdo (aubio_dct_t *s, const fvec_t * input, fvec_t * idct_output);







void del_aubio_dct (aubio_dct_t *s);


}
# 186 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/phasevoc.h" 1 3
# 38 "/usr/local/include/aubio/spectral/phasevoc.h" 3
extern "C" {



typedef struct _aubio_pvoc_t aubio_pvoc_t;







aubio_pvoc_t * new_aubio_pvoc (uint_t win_s, uint_t hop_s);





void del_aubio_pvoc(aubio_pvoc_t *pv);
# 70 "/usr/local/include/aubio/spectral/phasevoc.h" 3
void aubio_pvoc_do(aubio_pvoc_t *pv, const fvec_t *in, cvec_t * fftgrain);
# 83 "/usr/local/include/aubio/spectral/phasevoc.h" 3
void aubio_pvoc_rdo(aubio_pvoc_t *pv, cvec_t * fftgrain, fvec_t *out);






uint_t aubio_pvoc_get_win(aubio_pvoc_t* pv);





uint_t aubio_pvoc_get_hop(aubio_pvoc_t* pv);
# 106 "/usr/local/include/aubio/spectral/phasevoc.h" 3
uint_t aubio_pvoc_set_window(aubio_pvoc_t *pv, const char_t *window_type);


}
# 187 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/filterbank.h" 1 3
# 36 "/usr/local/include/aubio/spectral/filterbank.h" 3
extern "C"
{







typedef struct _aubio_filterbank_t aubio_filterbank_t;







aubio_filterbank_t *new_aubio_filterbank (uint_t n_filters, uint_t win_s);






void del_aubio_filterbank (aubio_filterbank_t * f);
# 69 "/usr/local/include/aubio/spectral/filterbank.h" 3
void aubio_filterbank_do (aubio_filterbank_t * f, const cvec_t * in, fvec_t * out);






fmat_t *aubio_filterbank_get_coeffs (const aubio_filterbank_t * f);







uint_t aubio_filterbank_set_coeffs (aubio_filterbank_t * f, const fmat_t * filters);


}
# 188 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/filterbank_mel.h" 1 3
# 38 "/usr/local/include/aubio/spectral/filterbank_mel.h" 3
extern "C"
{
# 52 "/usr/local/include/aubio/spectral/filterbank_mel.h" 3
uint_t aubio_filterbank_set_triangle_bands (aubio_filterbank_t * fb,
    const fvec_t * freqs, smpl_t samplerate);
# 65 "/usr/local/include/aubio/spectral/filterbank_mel.h" 3
uint_t aubio_filterbank_set_mel_coeffs_slaney (aubio_filterbank_t * fb,
    smpl_t samplerate);


}
# 189 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/mfcc.h" 1 3
# 41 "/usr/local/include/aubio/spectral/mfcc.h" 3
extern "C"
{



typedef struct _aubio_mfcc_t aubio_mfcc_t;
# 56 "/usr/local/include/aubio/spectral/mfcc.h" 3
aubio_mfcc_t *new_aubio_mfcc (uint_t buf_size,
    uint_t n_filters, uint_t n_coeffs, uint_t samplerate);






void del_aubio_mfcc (aubio_mfcc_t * mf);
# 73 "/usr/local/include/aubio/spectral/mfcc.h" 3
void aubio_mfcc_do (aubio_mfcc_t * mf, const cvec_t * in, fvec_t * out);


}
# 190 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/specdesc.h" 1 3
# 159 "/usr/local/include/aubio/spectral/specdesc.h" 3
extern "C" {



typedef struct _aubio_specdesc_t aubio_specdesc_t;
# 174 "/usr/local/include/aubio/spectral/specdesc.h" 3
void aubio_specdesc_do (aubio_specdesc_t * o, const cvec_t * fftgrain,
    fvec_t * desc);
# 191 "/usr/local/include/aubio/spectral/specdesc.h" 3
aubio_specdesc_t *new_aubio_specdesc (const char_t * method, uint_t buf_size);






void del_aubio_specdesc (aubio_specdesc_t * o);


}
# 191 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/awhitening.h" 1 3
# 47 "/usr/local/include/aubio/spectral/awhitening.h" 3
extern "C" {



typedef struct _aubio_spectral_whitening_t aubio_spectral_whitening_t;







void aubio_spectral_whitening_do (aubio_spectral_whitening_t * o,
                                  cvec_t * fftgrain);
# 69 "/usr/local/include/aubio/spectral/awhitening.h" 3
aubio_spectral_whitening_t *new_aubio_spectral_whitening (uint_t buf_size,
                                                          uint_t hop_size,
                                                          uint_t samplerate);






void aubio_spectral_whitening_reset (aubio_spectral_whitening_t * o);







uint_t aubio_spectral_whitening_set_relax_time (aubio_spectral_whitening_t * o,
    smpl_t relax_time);







smpl_t aubio_spectral_whitening_get_relax_time (aubio_spectral_whitening_t * o);







uint_t aubio_spectral_whitening_set_floor (aubio_spectral_whitening_t * o,
    smpl_t floor);







smpl_t aubio_spectral_whitening_get_floor (aubio_spectral_whitening_t * o);






void del_aubio_spectral_whitening (aubio_spectral_whitening_t * o);


}
# 192 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/spectral/tss.h" 1 3
# 43 "/usr/local/include/aubio/spectral/tss.h" 3
extern "C" {



typedef struct _aubio_tss_t aubio_tss_t;







aubio_tss_t *new_aubio_tss (uint_t buf_size, uint_t hop_size);






void del_aubio_tss (aubio_tss_t * o);
# 72 "/usr/local/include/aubio/spectral/tss.h" 3
void aubio_tss_do (aubio_tss_t * o, const cvec_t * input, cvec_t * trans,
    cvec_t * stead);







uint_t aubio_tss_set_threshold (aubio_tss_t * o, smpl_t thrs);







uint_t aubio_tss_set_alpha (aubio_tss_t * o, smpl_t alpha);







uint_t aubio_tss_set_beta (aubio_tss_t * o, smpl_t beta);


}
# 193 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/pitch/pitch.h" 1 3
# 25 "/usr/local/include/aubio/pitch/pitch.h" 3
extern "C" {
# 106 "/usr/local/include/aubio/pitch/pitch.h" 3
typedef struct _aubio_pitch_t aubio_pitch_t;
# 115 "/usr/local/include/aubio/pitch/pitch.h" 3
void aubio_pitch_do (aubio_pitch_t * o, const fvec_t * in, fvec_t * out);







uint_t aubio_pitch_set_tolerance (aubio_pitch_t * o, smpl_t tol);







smpl_t aubio_pitch_get_tolerance (aubio_pitch_t * o);






void del_aubio_pitch (aubio_pitch_t * o);
# 150 "/usr/local/include/aubio/pitch/pitch.h" 3
aubio_pitch_t *new_aubio_pitch (const char_t * method,
    uint_t buf_size, uint_t hop_size, uint_t samplerate);
# 163 "/usr/local/include/aubio/pitch/pitch.h" 3
uint_t aubio_pitch_set_unit (aubio_pitch_t * o, const char_t * mode);
# 173 "/usr/local/include/aubio/pitch/pitch.h" 3
uint_t aubio_pitch_set_silence (aubio_pitch_t * o, smpl_t silence);
# 182 "/usr/local/include/aubio/pitch/pitch.h" 3
smpl_t aubio_pitch_get_silence (aubio_pitch_t * o);
# 191 "/usr/local/include/aubio/pitch/pitch.h" 3
smpl_t aubio_pitch_get_confidence (aubio_pitch_t * o);


}
# 194 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/onset/onset.h" 1 3
# 46 "/usr/local/include/aubio/onset/onset.h" 3
extern "C" {



typedef struct _aubio_onset_t aubio_onset_t;
# 62 "/usr/local/include/aubio/onset/onset.h" 3
aubio_onset_t * new_aubio_onset (const char_t * method,
    uint_t buf_size, uint_t hop_size, uint_t samplerate);
# 91 "/usr/local/include/aubio/onset/onset.h" 3
void aubio_onset_do (aubio_onset_t *o, const fvec_t * input, fvec_t * onset);
# 100 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_get_last (const aubio_onset_t *o);
# 109 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_last_s (const aubio_onset_t *o);
# 118 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_last_ms (const aubio_onset_t *o);
# 128 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_awhitening(aubio_onset_t * o, uint_t enable);
# 137 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_awhitening(aubio_onset_t * o);
# 147 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_compression(aubio_onset_t *o, smpl_t lambda);
# 156 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_compression(aubio_onset_t *o);







uint_t aubio_onset_set_silence(aubio_onset_t * o, smpl_t silence);
# 173 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_silence(const aubio_onset_t * o);







smpl_t aubio_onset_get_descriptor (const aubio_onset_t *o);







smpl_t aubio_onset_get_thresholded_descriptor (const aubio_onset_t *o);







uint_t aubio_onset_set_threshold(aubio_onset_t * o, smpl_t threshold);
# 206 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_minioi(aubio_onset_t * o, uint_t minioi);
# 215 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_minioi_s(aubio_onset_t * o, smpl_t minioi);
# 224 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_minioi_ms(aubio_onset_t * o, smpl_t minioi);
# 233 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_delay(aubio_onset_t * o, uint_t delay);
# 242 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_delay_s(aubio_onset_t * o, smpl_t delay);
# 251 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_delay_ms(aubio_onset_t * o, smpl_t delay);
# 260 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_get_minioi(const aubio_onset_t * o);
# 269 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_minioi_s(const aubio_onset_t * o);
# 278 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_minioi_ms(const aubio_onset_t * o);
# 287 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_get_delay(const aubio_onset_t * o);
# 296 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_delay_s(const aubio_onset_t * o);
# 305 "/usr/local/include/aubio/onset/onset.h" 3
smpl_t aubio_onset_get_delay_ms(const aubio_onset_t * o);







smpl_t aubio_onset_get_threshold(const aubio_onset_t * o);
# 323 "/usr/local/include/aubio/onset/onset.h" 3
uint_t aubio_onset_set_default_parameters (aubio_onset_t * o, const char_t * onset_mode);
# 334 "/usr/local/include/aubio/onset/onset.h" 3
void aubio_onset_reset(aubio_onset_t * o);






void del_aubio_onset(aubio_onset_t * o);


}
# 195 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/tempo/tempo.h" 1 3
# 37 "/usr/local/include/aubio/tempo/tempo.h" 3
extern "C" {



typedef struct _aubio_tempo_t aubio_tempo_t;
# 53 "/usr/local/include/aubio/tempo/tempo.h" 3
aubio_tempo_t * new_aubio_tempo (const char_t * method,
    uint_t buf_size, uint_t hop_size, uint_t samplerate);
# 63 "/usr/local/include/aubio/tempo/tempo.h" 3
void aubio_tempo_do (aubio_tempo_t *o, const fvec_t * input, fvec_t * tempo);






uint_t aubio_tempo_get_last (aubio_tempo_t *o);






smpl_t aubio_tempo_get_last_s (aubio_tempo_t *o);






smpl_t aubio_tempo_get_last_ms (aubio_tempo_t *o);
# 94 "/usr/local/include/aubio/tempo/tempo.h" 3
uint_t aubio_tempo_set_silence(aubio_tempo_t * o, smpl_t silence);
# 103 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_silence(aubio_tempo_t * o);
# 113 "/usr/local/include/aubio/tempo/tempo.h" 3
uint_t aubio_tempo_set_threshold(aubio_tempo_t * o, smpl_t threshold);
# 122 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_threshold(aubio_tempo_t * o);
# 132 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_period (aubio_tempo_t * bt);
# 142 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_period_s (aubio_tempo_t * bt);
# 151 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_bpm(aubio_tempo_t * o);
# 161 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_confidence(aubio_tempo_t * o);







uint_t aubio_tempo_set_tatum_signature(aubio_tempo_t *o, uint_t signature);
# 178 "/usr/local/include/aubio/tempo/tempo.h" 3
uint_t aubio_tempo_was_tatum(aubio_tempo_t *o);






smpl_t aubio_tempo_get_last_tatum(aubio_tempo_t *o);
# 194 "/usr/local/include/aubio/tempo/tempo.h" 3
uint_t aubio_tempo_get_delay(aubio_tempo_t * o);
# 203 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_delay_s(aubio_tempo_t * o);
# 212 "/usr/local/include/aubio/tempo/tempo.h" 3
smpl_t aubio_tempo_get_delay_ms(aubio_tempo_t * o);
# 222 "/usr/local/include/aubio/tempo/tempo.h" 3
uint_t aubio_tempo_set_delay(aubio_tempo_t * o, sint_t delay);
# 232 "/usr/local/include/aubio/tempo/tempo.h" 3
uint_t aubio_tempo_set_delay_s(aubio_tempo_t * o, smpl_t delay);
# 242 "/usr/local/include/aubio/tempo/tempo.h" 3
uint_t aubio_tempo_set_delay_ms(aubio_tempo_t * o, smpl_t delay);






void del_aubio_tempo(aubio_tempo_t * o);


}
# 196 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/notes/notes.h" 1 3
# 31 "/usr/local/include/aubio/notes/notes.h" 3
extern "C" {



typedef struct _aubio_notes_t aubio_notes_t;
# 47 "/usr/local/include/aubio/notes/notes.h" 3
aubio_notes_t * new_aubio_notes (const char_t * method,
    uint_t buf_size, uint_t hop_size, uint_t samplerate);






void del_aubio_notes(aubio_notes_t * o);
# 69 "/usr/local/include/aubio/notes/notes.h" 3
void aubio_notes_do (aubio_notes_t *o, const fvec_t * input, fvec_t * output);
# 79 "/usr/local/include/aubio/notes/notes.h" 3
uint_t aubio_notes_set_silence(aubio_notes_t * o, smpl_t silence);
# 88 "/usr/local/include/aubio/notes/notes.h" 3
smpl_t aubio_notes_get_silence(const aubio_notes_t * o);
# 97 "/usr/local/include/aubio/notes/notes.h" 3
smpl_t aubio_notes_get_minioi_ms(const aubio_notes_t *o);
# 107 "/usr/local/include/aubio/notes/notes.h" 3
uint_t aubio_notes_set_minioi_ms (aubio_notes_t *o, smpl_t minioi_ms);


}
# 197 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/io/source.h" 1 3
# 67 "/usr/local/include/aubio/io/source.h" 3
extern "C" {



typedef struct _aubio_source_t aubio_source_t;
# 88 "/usr/local/include/aubio/io/source.h" 3
aubio_source_t * new_aubio_source(const char_t * uri, uint_t samplerate, uint_t hop_size);
# 102 "/usr/local/include/aubio/io/source.h" 3
void aubio_source_do(aubio_source_t * s, fvec_t * read_to, uint_t * read);
# 116 "/usr/local/include/aubio/io/source.h" 3
void aubio_source_do_multi(aubio_source_t * s, fmat_t * read_to, uint_t * read);
# 126 "/usr/local/include/aubio/io/source.h" 3
uint_t aubio_source_get_samplerate(aubio_source_t * s);
# 136 "/usr/local/include/aubio/io/source.h" 3
uint_t aubio_source_get_channels (aubio_source_t * s);
# 148 "/usr/local/include/aubio/io/source.h" 3
uint_t aubio_source_seek (aubio_source_t * s, uint_t pos);
# 158 "/usr/local/include/aubio/io/source.h" 3
uint_t aubio_source_get_duration (aubio_source_t * s);
# 169 "/usr/local/include/aubio/io/source.h" 3
uint_t aubio_source_close (aubio_source_t *s);
# 178 "/usr/local/include/aubio/io/source.h" 3
void del_aubio_source(aubio_source_t * s);


}
# 198 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/io/sink.h" 1 3
# 57 "/usr/local/include/aubio/io/sink.h" 3
extern "C" {



typedef struct _aubio_sink_t aubio_sink_t;
# 79 "/usr/local/include/aubio/io/sink.h" 3
aubio_sink_t * new_aubio_sink(const char_t * uri, uint_t samplerate);
# 96 "/usr/local/include/aubio/io/sink.h" 3
uint_t aubio_sink_preset_samplerate(aubio_sink_t *s, uint_t samplerate);
# 113 "/usr/local/include/aubio/io/sink.h" 3
uint_t aubio_sink_preset_channels(aubio_sink_t *s, uint_t channels);
# 123 "/usr/local/include/aubio/io/sink.h" 3
uint_t aubio_sink_get_samplerate(const aubio_sink_t *s);
# 133 "/usr/local/include/aubio/io/sink.h" 3
uint_t aubio_sink_get_channels(const aubio_sink_t *s);
# 144 "/usr/local/include/aubio/io/sink.h" 3
void aubio_sink_do(aubio_sink_t * s, fvec_t * write_data, uint_t write);
# 155 "/usr/local/include/aubio/io/sink.h" 3
void aubio_sink_do_multi(aubio_sink_t * s, fmat_t * write_data, uint_t write);
# 166 "/usr/local/include/aubio/io/sink.h" 3
uint_t aubio_sink_close(aubio_sink_t * s);
# 175 "/usr/local/include/aubio/io/sink.h" 3
void del_aubio_sink(aubio_sink_t * s);


}
# 199 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/synth/sampler.h" 1 3
# 38 "/usr/local/include/aubio/synth/sampler.h" 3
extern "C" {



typedef struct _aubio_sampler_t aubio_sampler_t;
# 52 "/usr/local/include/aubio/synth/sampler.h" 3
aubio_sampler_t * new_aubio_sampler(uint_t samplerate, uint_t hop_size);
# 62 "/usr/local/include/aubio/synth/sampler.h" 3
uint_t aubio_sampler_load( aubio_sampler_t * o, const char_t * uri );
# 76 "/usr/local/include/aubio/synth/sampler.h" 3
void aubio_sampler_do ( aubio_sampler_t * o, const fvec_t * input, fvec_t * output);
# 90 "/usr/local/include/aubio/synth/sampler.h" 3
void aubio_sampler_do_multi ( aubio_sampler_t * o, const fmat_t * input, fmat_t * output);
# 99 "/usr/local/include/aubio/synth/sampler.h" 3
uint_t aubio_sampler_get_playing ( const aubio_sampler_t * o );
# 109 "/usr/local/include/aubio/synth/sampler.h" 3
uint_t aubio_sampler_set_playing ( aubio_sampler_t * o, uint_t playing );
# 118 "/usr/local/include/aubio/synth/sampler.h" 3
uint_t aubio_sampler_play ( aubio_sampler_t * o );
# 127 "/usr/local/include/aubio/synth/sampler.h" 3
uint_t aubio_sampler_stop ( aubio_sampler_t * o );






void del_aubio_sampler( aubio_sampler_t * o );


}
# 200 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/synth/wavetable.h" 1 3
# 38 "/usr/local/include/aubio/synth/wavetable.h" 3
extern "C" {



typedef struct _aubio_wavetable_t aubio_wavetable_t;
# 52 "/usr/local/include/aubio/synth/wavetable.h" 3
aubio_wavetable_t * new_aubio_wavetable(uint_t samplerate, uint_t hop_size);
# 62 "/usr/local/include/aubio/synth/wavetable.h" 3
uint_t aubio_wavetable_load( aubio_wavetable_t * o, const char_t * uri );
# 76 "/usr/local/include/aubio/synth/wavetable.h" 3
void aubio_wavetable_do ( aubio_wavetable_t * o, const fvec_t * input, fvec_t * output);
# 90 "/usr/local/include/aubio/synth/wavetable.h" 3
void aubio_wavetable_do_multi ( aubio_wavetable_t * o, const fmat_t * input, fmat_t * output);
# 99 "/usr/local/include/aubio/synth/wavetable.h" 3
uint_t aubio_wavetable_get_playing ( const aubio_wavetable_t * o );
# 109 "/usr/local/include/aubio/synth/wavetable.h" 3
uint_t aubio_wavetable_set_playing ( aubio_wavetable_t * o, uint_t playing );
# 118 "/usr/local/include/aubio/synth/wavetable.h" 3
uint_t aubio_wavetable_play ( aubio_wavetable_t * o );
# 127 "/usr/local/include/aubio/synth/wavetable.h" 3
uint_t aubio_wavetable_stop ( aubio_wavetable_t * o );
# 137 "/usr/local/include/aubio/synth/wavetable.h" 3
uint_t aubio_wavetable_set_freq ( aubio_wavetable_t * o, smpl_t freq );
# 146 "/usr/local/include/aubio/synth/wavetable.h" 3
smpl_t aubio_wavetable_get_freq ( const aubio_wavetable_t * o);
# 156 "/usr/local/include/aubio/synth/wavetable.h" 3
uint_t aubio_wavetable_set_amp ( aubio_wavetable_t * o, smpl_t amp );
# 165 "/usr/local/include/aubio/synth/wavetable.h" 3
smpl_t aubio_wavetable_get_amp ( const aubio_wavetable_t * o);






void del_aubio_wavetable( aubio_wavetable_t * o );


}
# 201 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/utils/parameter.h" 1 3
# 36 "/usr/local/include/aubio/utils/parameter.h" 3
extern "C" {



typedef struct _aubio_parameter_t aubio_parameter_t;
# 51 "/usr/local/include/aubio/utils/parameter.h" 3
aubio_parameter_t * new_aubio_parameter(smpl_t min_value, smpl_t max_value, uint_t steps);
# 61 "/usr/local/include/aubio/utils/parameter.h" 3
uint_t aubio_parameter_set_target_value ( aubio_parameter_t * param, smpl_t value );
# 70 "/usr/local/include/aubio/utils/parameter.h" 3
smpl_t aubio_parameter_get_next_value ( aubio_parameter_t * param );
# 79 "/usr/local/include/aubio/utils/parameter.h" 3
smpl_t aubio_parameter_get_current_value ( const aubio_parameter_t * param );
# 89 "/usr/local/include/aubio/utils/parameter.h" 3
uint_t aubio_parameter_set_current_value ( aubio_parameter_t * param, smpl_t value );
# 99 "/usr/local/include/aubio/utils/parameter.h" 3
uint_t aubio_parameter_set_steps ( aubio_parameter_t * param, uint_t steps );
# 108 "/usr/local/include/aubio/utils/parameter.h" 3
uint_t aubio_parameter_get_steps ( const aubio_parameter_t * param);
# 118 "/usr/local/include/aubio/utils/parameter.h" 3
uint_t aubio_parameter_set_min_value ( aubio_parameter_t * param, smpl_t min_value );
# 127 "/usr/local/include/aubio/utils/parameter.h" 3
smpl_t aubio_parameter_get_min_value ( const aubio_parameter_t * param );
# 137 "/usr/local/include/aubio/utils/parameter.h" 3
uint_t aubio_parameter_set_max_value ( aubio_parameter_t * param, smpl_t max_value );
# 146 "/usr/local/include/aubio/utils/parameter.h" 3
smpl_t aubio_parameter_get_max_value ( const aubio_parameter_t * param );






void del_aubio_parameter( aubio_parameter_t * param );


}
# 202 "/usr/local/include/aubio/aubio.h" 2 3
# 1 "/usr/local/include/aubio/utils/log.h" 1 3
# 25 "/usr/local/include/aubio/utils/log.h" 3
extern "C" {
# 46 "/usr/local/include/aubio/utils/log.h" 3
enum aubio_log_level {
  AUBIO_LOG_ERR,
  AUBIO_LOG_INF,
  AUBIO_LOG_MSG,
  AUBIO_LOG_DBG,
  AUBIO_LOG_WRN,
  AUBIO_LOG_LAST_LEVEL,
};
# 64 "/usr/local/include/aubio/utils/log.h" 3
typedef void (*aubio_log_function_t)(sint_t level, const char_t *message, void
    *data);
# 74 "/usr/local/include/aubio/utils/log.h" 3
void aubio_log_set_function(aubio_log_function_t fun, void* data);
# 84 "/usr/local/include/aubio/utils/log.h" 3
aubio_log_function_t aubio_log_set_level_function(sint_t level,
    aubio_log_function_t fun, void* data);







void aubio_log_reset(void);


}
# 203 "/usr/local/include/aubio/aubio.h" 2 3
# 228 "/usr/local/include/aubio/aubio.h" 3
}
# 3 "/root/Bela/projects/bela-game/render.cpp" 2


# 4 "/root/Bela/projects/bela-game/render.cpp"
void initOSC();

fvec_t *pitch;
smpl_t amp;
extern "C" {
 int aubio_pitch_setup(float sampleRate);
 void process_block(fvec_t * ibuf, fvec_t * obuf);
};

void Bela_userSettings(BelaInitSettings *settings)
{
 settings->uniformSampleRate = 1;
 settings->interleave = 0;
 settings->analogOutputsPersist = 0;
 settings->periodSize = 128;
 settings->highPerformanceMode = 0;
}

bool setup(BelaContext *context, void *userData)
{
 initOSC();
 return !aubio_pitch_setup(context->audioSampleRate);
}

void render(BelaContext *context, void *userData)
{
 aubio_pitch_render(context, userData);

 static auto lastUpdate = context->audioFramesElapsed;
 if(context->audioFramesElapsed - lastUpdate > 5000)
 {
  lastUpdate = context->audioFramesElapsed;
  rt_printf("pitch: %7.3f, amp: %6f\n", fvec_get_sample(pitch, 0), 10*amp);
 }
}

void cleanup(BelaContext *context, void *userData)
{

}
